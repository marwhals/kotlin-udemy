[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Marjan\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Marjan\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[info] Updated file C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project\build.properties: set sbt.version to 1.8.2
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 17.0.7)
[debug]       Load.loadUnit: plugins took 105.9037ms
[debug]       Load.loadUnit: defsScala took 0.3022ms
[debug] [Loading] Scanning directory C:\Users\Marjan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marjan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.0873 ms
[debug]           Load.resolveProject(global-plugins) took 48.8234ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Marjan\.sbt\1.0\plugins, plugins: List(<none>))) took 89.2634ms
[debug] [Loading] Done in C:\Users\Marjan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.857ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2744ms
[debug]     Load.loadUnit(file:/C:/Users/Marjan/.sbt/1.0/plugins/, ...) took 232.1508ms
[debug]   Load.apply: load took 561.3028ms
[debug]   Load.apply: resolveProjects took 7.0993ms
[debug]   Load.apply: finalTransforms took 78.658ms
[debug]   Load.apply: config.delegates took 14.5722ms
[debug]   Load.apply: Def.make(settings)... took 506.6019ms
[debug]   Load.apply: structureIndex took 103.6596ms
[debug]   Load.apply: mkStreams took 1.6664ms
[info] loading global plugins from C:\Users\Marjan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3843.3196ms
[debug]           Load.loadUnit: plugins took 35.611ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project
[debug]             Load.loadUnit: mkEval took 6.6275ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6897 ms
[info] loading settings for project kotlin-udemy-build from idea1.sbt ...
[debug]               Load.resolveProject(kotlin-udemy-build) took 11.8991ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kotlin-udemy-build, base: C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project, plugins: List(<none>))) took 15.2273ms
[debug] [Loading] Done in C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project, returning: (kotlin-udemy-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2696.8221ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.8918ms
[debug]         Load.loadUnit(file:/C:/Users/Marjan/Documents/JVM-Scala-Projects/kotlin-udemy/project/, ...) took 2741.339ms
[debug]       Load.apply: load took 2744.2664ms
[debug]       Load.apply: resolveProjects took 0.1185ms
[debug]       Load.apply: finalTransforms took 31.2256ms
[debug]       Load.apply: config.delegates took 1.0825ms
[debug]       Load.apply: Def.make(settings)... took 114.941ms
[debug]       Load.apply: structureIndex took 44.7514ms
[debug]       Load.apply: mkStreams took 0.0016ms
[info] loading project definition from C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4991.5708ms
[debug]     Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.851 ms
[debug]         Load.resolveProject(kotlin-udemy) took 31.5797ms
[debug]       Load.loadTransitive: finalizeProject(Project(id kotlin-udemy, base: C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy, plugins: List(<none>))) took 34.433ms
[debug] [Loading] Done in C:\Users\Marjan\Documents\JVM-Scala-Projects\kotlin-udemy, returning: (kotlin-udemy)
[debug]     Load.loadUnit: loadedProjectsRaw took 35.6214ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0104ms
[debug]   Load.loadUnit(file:/C:/Users/Marjan/Documents/JVM-Scala-Projects/kotlin-udemy/, ...) took 5027.9286ms
[debug] Load.apply: load took 5029.3837ms
[debug] Load.apply: resolveProjects took 0.0873ms
[debug] Load.apply: finalTransforms took 25.332ms
[debug] Load.apply: config.delegates took 0.2695ms
[debug] Load.apply: Def.make(settings)... took 87.7359ms
[debug] Load.apply: structureIndex took 39.6575ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to kotlin-udemy (in build file:/C:/Users/Marjan/Documents/JVM-Scala-Projects/kotlin-udemy/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57469 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57469, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to kotlin-udemy (in build file:/C:/Users/Marjan/Documents/JVM-Scala-Projects/kotlin-udemy/)
[debug] > Exec(idea-shell, None, None)
